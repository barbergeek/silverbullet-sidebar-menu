{
  "version": 3,
  "sources": ["https://deno.land/x/silverbullet@0.10.1/lib/plugos/worker_runtime.ts", "https://jsr.io/@silverbulletmd/silverbullet/0.10.1/plug-api/syscalls/editor.ts", "https://jsr.io/@silverbulletmd/silverbullet/0.10.1/plug-api/syscall.ts", "https://jsr.io/@silverbulletmd/silverbullet/0.10.1/plug-api/syscalls/markdown.ts", "https://jsr.io/@silverbulletmd/silverbullet/0.10.1/plug-api/syscalls/system.ts", "https://jsr.io/@silverbulletmd/silverbullet/0.10.1/plug-api/syscalls/clientStore.ts", "https://jsr.io/@silverbulletmd/silverbullet/0.10.1/plug-api/syscalls/asset.ts", "https://jsr.io/@silverbulletmd/silverbullet/0.10.1/lib/crypto.ts", "https://jsr.io/@silverbulletmd/silverbullet/0.10.1/plug-api/lib/tree.ts", "https://jsr.io/@silverbulletmd/silverbullet/0.10.1/plug-api/lib/markdown.ts", "outline-sidebar.ts", "ab36af41a6e8c5ea.js"],
  "sourcesContent": ["// This is the runtime imported from the compiled plug worker code\nimport type { ControllerMessage, WorkerMessage } from \"./protocol.ts\";\nimport type { ProxyFetchRequest, ProxyFetchResponse } from \"../proxy_fetch.ts\";\n\ndeclare global {\n  function syscall(name: string, ...args: any[]): Promise<any>;\n}\n\nlet workerPostMessage = (_msg: ControllerMessage): void => {\n  throw new Error(\"Not initialized yet\");\n};\n\n// Are we running in a (web) worker?\n\n// Determines if we're running in a web worker environment (Deno or browser)\n// - in a browser's main threads, typeof window is \"object\"\n// - in a browser's worker threads, typeof window === \"undefined\"\n// - in Deno's main thread typeof window === \"object\"\n// - in Deno's workers typeof window === \"undefined\n// - in Cloudflare workers typeof window === \"undefined\", but typeof globalThis.WebSocketPair is defined\nconst runningAsWebWorker = typeof window === \"undefined\" &&\n  // @ts-ignore: globalThis\n  typeof globalThis.WebSocketPair === \"undefined\";\n\nif (typeof Deno === \"undefined\") {\n  // @ts-ignore: Deno hack\n  self.Deno = {\n    args: [],\n    // @ts-ignore: Deno hack\n    build: {\n      arch: \"x86_64\",\n    },\n    env: {\n      // @ts-ignore: Deno hack\n      get() {\n      },\n    },\n  };\n}\n\nconst pendingRequests = new Map<\n  number,\n  {\n    resolve: (result: unknown) => void;\n    reject: (e: any) => void;\n  }\n>();\n\nlet syscallReqId = 0;\n\nif (runningAsWebWorker) {\n  globalThis.syscall = async (name: string, ...args: any[]) => {\n    return await new Promise((resolve, reject) => {\n      syscallReqId++;\n      pendingRequests.set(syscallReqId, { resolve, reject });\n      workerPostMessage({\n        type: \"sys\",\n        id: syscallReqId,\n        name,\n        args,\n      });\n    });\n  };\n}\n\nexport function setupMessageListener(\n  // deno-lint-ignore ban-types\n  functionMapping: Record<string, Function>,\n  manifest: any,\n  postMessageFn: (msg: ControllerMessage) => void,\n) {\n  if (!runningAsWebWorker) {\n    // Don't do any of this stuff if this is not a web worker\n    // This caters to the NoSandbox run mode\n    return;\n  }\n  workerPostMessage = postMessageFn;\n  self.addEventListener(\"message\", (event: { data: WorkerMessage }) => {\n    (async () => {\n      const data = event.data;\n      switch (data.type) {\n        case \"inv\":\n          {\n            const fn = functionMapping[data.name!];\n            if (!fn) {\n              throw new Error(`Function not loaded: ${data.name}`);\n            }\n            try {\n              const result = await Promise.resolve(fn(...(data.args || [])));\n              workerPostMessage({\n                type: \"invr\",\n                id: data.id,\n                result: result,\n              } as ControllerMessage);\n            } catch (e: any) {\n              console.error(\n                \"An exception was thrown as a result of invoking function\",\n                data.name,\n                \"error:\",\n                e.message,\n              );\n              workerPostMessage({\n                type: \"invr\",\n                id: data.id!,\n                error: e.message,\n              });\n            }\n          }\n          break;\n        case \"sysr\":\n          {\n            const syscallId = data.id;\n            const lookup = pendingRequests.get(syscallId);\n            if (!lookup) {\n              throw Error(\"Invalid request id\");\n            }\n            pendingRequests.delete(syscallId);\n            if (data.error) {\n              lookup.reject(new Error(data.error));\n            } else {\n              lookup.resolve(data.result);\n            }\n          }\n\n          break;\n      }\n    })().catch(console.error);\n  });\n  // Signal initialization with manifest\n  workerPostMessage({\n    type: \"manifest\",\n    manifest,\n  });\n}\n\nexport function base64Decode(s: string): Uint8Array {\n  const binString = atob(s);\n  const len = binString.length;\n  const bytes = new Uint8Array(len);\n  for (let i = 0; i < len; i++) {\n    bytes[i] = binString.charCodeAt(i);\n  }\n  return bytes;\n}\n\nexport function base64Encode(buffer: Uint8Array | string): string {\n  if (typeof buffer === \"string\") {\n    buffer = new TextEncoder().encode(buffer);\n  }\n  let binary = \"\";\n  const len = buffer.byteLength;\n  for (let i = 0; i < len; i++) {\n    binary += String.fromCharCode(buffer[i]);\n  }\n  return btoa(binary);\n}\n\nexport async function sandboxFetch(\n  reqInfo: RequestInfo,\n  options?: ProxyFetchRequest,\n): Promise<ProxyFetchResponse> {\n  if (typeof reqInfo !== \"string\") {\n    const body = new Uint8Array(await reqInfo.arrayBuffer());\n    const encodedBody = body.length > 0 ? base64Encode(body) : undefined;\n    options = {\n      method: reqInfo.method,\n      headers: Object.fromEntries(reqInfo.headers.entries()),\n      base64Body: encodedBody,\n    };\n    reqInfo = reqInfo.url;\n  }\n  return syscall(\"sandboxFetch.fetch\", reqInfo, options);\n}\n\n// @ts-ignore: monkey patching fetch\nglobalThis.nativeFetch = globalThis.fetch;\n// Monkey patch fetch()\nexport function monkeyPatchFetch() {\n  // @ts-ignore: monkey patching fetch\n  globalThis.fetch = async function (\n    reqInfo: RequestInfo,\n    init?: RequestInit,\n  ): Promise<Response> {\n    const encodedBody = init && init.body\n      ? base64Encode(\n        new Uint8Array(await (new Response(init.body)).arrayBuffer()),\n      )\n      : undefined;\n    const r = await sandboxFetch(\n      reqInfo,\n      init && {\n        method: init.method,\n        headers: init.headers as Record<string, string>,\n        base64Body: encodedBody,\n      },\n    );\n    return new Response(r.base64Body ? base64Decode(r.base64Body) : null, {\n      status: r.status,\n      headers: r.headers,\n    });\n  };\n}\n\nif (runningAsWebWorker) {\n  monkeyPatchFetch();\n}\n\n// denoCacheMetadata={\"headers\":{\"last-modified\":\"Thu, 14 Nov 2024 20:29:01 GMT\",\"strict-transport-security\":\"max-age=63072000; includeSubDomains; preload\",\"x-amz-replication-status\":\"COMPLETED\",\"x-amz-server-side-encryption\":\"AES256\",\"content-length\":\"5705\",\"referrer-policy\":\"strict-origin-when-cross-origin\",\"accept-ranges\":\"bytes\",\"via\":\"http/2 edgeproxy-h\",\"x-amz-version-id\":\"yoF0TtLM7ATybE7y3AzFMA1RJNZthmFJ\",\"x-cache\":\"Hit from cloudfront\",\"x-content-type-options\":\"nosniff\",\"x-amz-cf-pop\":\"SYD62-P3\",\"cross-origin-embedder-policy\":\"same-origin\",\"cross-origin-resource-policy\":\"same-origin\",\"x-frame-options\":\"DENY\",\"age\":\"154981\",\"cross-origin-opener-policy\":\"same-origin\",\"date\":\"Fri, 15 Nov 2024 09:26:40 GMT\",\"cache-control\":\"public, max-age=31536000, immutable\",\"server-timing\":\"fetchSource;dur=6\",\"content-security-policy\":\"default-src 'none'; style-src 'unsafe-inline'; sandbox\",\"server\":\"deno/gcp-australia-southeast1\",\"x-amz-cf-id\":\"05ZtubwkcJnPgEue5aZKEVG8tNkGKVt6xjArWkt4yskPTvABtAwwjw==\",\"content-type\":\"application/typescript; charset=utf-8\",\"vary\":\"Accept-Encoding, Origin\",\"etag\":\"\\\"099b2158cf5c7fb72c6cc3321a51fdae\\\"\",\"access-control-allow-origin\":\"*\"},\"url\":\"https://deno.land/x/silverbullet@0.10.1/lib/plugos/worker_runtime.ts\",\"time\":1731817779}", "import type { UploadFile } from \"../types.ts\";\nimport { syscall } from \"../syscall.ts\";\nimport type { PageRef } from \"../lib/page_ref.ts\";\nimport type { FilterOption } from \"../../type/client.ts\";\n\n/**\n * Exposes various editor utilities.\n * Important: These syscalls are only available in the client.\n * @module\n */\n\n/**\n * Returns the name of the page currently open in the editor.\n * @returns the current page name\n */\nexport function getCurrentPage(): Promise<string> {\n  return syscall(\"editor.getCurrentPage\");\n}\n\n/**\n * Returns the full text of the currently open page\n */\nexport function getText(): Promise<string> {\n  return syscall(\"editor.getText\");\n}\n\n/**\n * This updates the editor text, but in a minimal-diff way:\n * it compares the current editor text with the new text, and only sends the changes to the editor, thereby preserving cursor location\n */\nexport function setText(\n  newText: string,\n  isolateHistory = false,\n): Promise<void> {\n  return syscall(\"editor.setText\", newText, isolateHistory);\n}\n\n/**\n * Returns the position (in # of characters from the beginning of the file) of the cursor in the editor\n */\nexport function getCursor(): Promise<number> {\n  return syscall(\"editor.getCursor\");\n}\n\n/**\n * Returns the line number and column number of the cursor in the editor\n */\nexport function getSelection(): Promise<{ from: number; to: number }> {\n  return syscall(\"editor.getSelection\");\n}\n\n/**\n * Sets the position of the cursor in the editor\n * @param from the start position of the selection\n * @param to the end position of the selection\n */\nexport function setSelection(from: number, to: number): Promise<void> {\n  return syscall(\"editor.setSelection\", from, to);\n}\n\n/**\n * Forces a save of the current page\n */\nexport function save(): Promise<void> {\n  return syscall(\"editor.save\");\n}\n\n/**\n * Navigates to the specified page reference\n * @param pageRef the page reference to navigate to\n * @param replaceState whether to replace the current history state in the browser history\n * @param newWindow whether to open the page in a new window\n */\nexport function navigate(\n  pageRef: PageRef,\n  replaceState = false,\n  newWindow = false,\n): Promise<void> {\n  return syscall(\"editor.navigate\", pageRef, replaceState, newWindow);\n}\n\n/**\n * Opens the page navigator\n * @param mode the mode to open the navigator in\n */\nexport function openPageNavigator(\n  mode: \"page\" | \"meta\" | \"all\" = \"page\",\n): Promise<void> {\n  return syscall(\"editor.openPageNavigator\", mode);\n}\n\n/**\n * Opens the command palette\n */\nexport function openCommandPalette(): Promise<void> {\n  return syscall(\"editor.openCommandPalette\");\n}\n\n/**\n * Force reloads the current page\n */\nexport function reloadPage(): Promise<void> {\n  return syscall(\"editor.reloadPage\");\n}\n\n/**\n * Force reloads the browser UI\n */\nexport function reloadUI(): Promise<void> {\n  return syscall(\"editor.reloadUI\");\n}\n\n/**\n * Reloads the config and commands, also in the server\n */\nexport function reloadConfigAndCommands(): Promise<void> {\n  return syscall(\"editor.reloadConfigAndCommands\");\n}\n\n/**\n * Opens the specified URL in the browser\n * @param url the URL to open\n * @param existingWindow whether to open the URL in an existing window\n */\nexport function openUrl(url: string, existingWindow = false): Promise<void> {\n  return syscall(\"editor.openUrl\", url, existingWindow);\n}\n\nexport function newWindow(): Promise<void> {\n  return syscall(\"editor.newWindow\");\n}\n\n/**\n * This is calling the `go()` method from the History Web API.\n * @param delta Position in history to move to relative to the current page,\n * where a negative value moves backwards, and positive forwards\n */\nexport function goHistory(delta: number): Promise<void> {\n  return syscall(\"editor.goHistory\", delta);\n}\n\n/**\n * Force the client to download the file in dataUrl with filename as file name\n * @param filename the name of the file to download\n * @param dataUrl the dataUrl of the file to download\n */\nexport function downloadFile(filename: string, dataUrl: string): Promise<void> {\n  return syscall(\"editor.downloadFile\", filename, dataUrl);\n}\n\n/**\n * Triggers the browser's native file upload dialog/popup\n * @param accept the file types to accept\n * @param capture the capture mode for the file input\n */\nexport function uploadFile(\n  accept?: string,\n  capture?: string,\n): Promise<UploadFile> {\n  return syscall(\"editor.uploadFile\", accept, capture);\n}\n\n/**\n * Shows a flash notification to the user (top right corner)\n * @param message the message to show\n * @param type the type of notification to show\n */\nexport function flashNotification(\n  message: string,\n  type: \"info\" | \"error\" = \"info\",\n): Promise<void> {\n  return syscall(\"editor.flashNotification\", message, type);\n}\n\n/**\n * Exposes a filter box UI (similar to the page navigator and command palette)\n * @param label the label to show left of the input box\n * @param options the options to show and to filter on\n * @param helpText the help text to show below the input box\n * @param placeHolder the placeholder text to show in the input box\n */\nexport function filterBox(\n  label: string,\n  options: FilterOption[],\n  helpText = \"\",\n  placeHolder = \"\",\n): Promise<FilterOption | undefined> {\n  return syscall(\"editor.filterBox\", label, options, helpText, placeHolder);\n}\n\n/**\n * Shows a panel in the editor\n * @param id the location of the panel to show\n * @param mode the mode or \"size\" of the panel\n * @param html the html content of the panel\n * @param script the script content of the panel\n */\nexport function showPanel(\n  id: \"lhs\" | \"rhs\" | \"bhs\" | \"modal\",\n  mode: number,\n  html: string,\n  script = \"\",\n): Promise<void> {\n  return syscall(\"editor.showPanel\", id, mode, html, script);\n}\n\n/**\n * Hides a panel in the editor\n * @param id the location of the panel to hide\n */\nexport function hidePanel(\n  id: \"lhs\" | \"rhs\" | \"bhs\" | \"modal\",\n): Promise<void> {\n  return syscall(\"editor.hidePanel\", id);\n}\n\n/**\n * Insert text at the specified position into the editor\n * @param text the text to insert\n * @param pos\n */\nexport function insertAtPos(text: string, pos: number): Promise<void> {\n  return syscall(\"editor.insertAtPos\", text, pos);\n}\n\n/**\n * Replace the text in the specified range in the editor\n * @param from the start position of the range\n * @param to the end position of the range\n * @param text the text to replace with\n */\nexport function replaceRange(\n  from: number,\n  to: number,\n  text: string,\n): Promise<void> {\n  return syscall(\"editor.replaceRange\", from, to, text);\n}\n\n/**\n * Move the cursor to the specified position in the editor\n * @param pos the position to move the cursor to\n * @param center whether to center the cursor in the editor after moving\n */\nexport function moveCursor(pos: number, center = false): Promise<void> {\n  return syscall(\"editor.moveCursor\", pos, center);\n}\n\n/**\n * Move the cursor to the specified line and column in the editor\n * @param line the line number to move the cursor to\n * @param column the column number to move the cursor to\n * @param center whether to center the cursor in the editor after moving\n */\nexport function moveCursorToLine(\n  line: number,\n  column = 1,\n  center = false,\n): Promise<void> {\n  return syscall(\"editor.moveCursorToLine\", line, column, center);\n}\n\n/**\n * Insert text at the cursor position in the editor\n * @param text the text to insert\n */\nexport function insertAtCursor(text: string): Promise<void> {\n  return syscall(\"editor.insertAtCursor\", text);\n}\n\n/**\n * Dispatch a CodeMirror transaction: https://codemirror.net/docs/ref/#state.Transaction\n */\nexport function dispatch(change: any): Promise<void> {\n  return syscall(\"editor.dispatch\", change);\n}\n\n/**\n * Prompt the user for text input\n * @param message the message to show in the prompt\n * @param defaultValue a default value pre-filled in the prompt\n * @returns\n */\nexport function prompt(\n  message: string,\n  defaultValue = \"\",\n): Promise<string | undefined> {\n  return syscall(\"editor.prompt\", message, defaultValue);\n}\n\n/**\n * Prompt the user for confirmation\n * @param message the message to show in the confirmation dialog\n * @returns\n */\nexport function confirm(\n  message: string,\n): Promise<boolean> {\n  return syscall(\"editor.confirm\", message);\n}\n\n/**\n * Get the value of a UI option\n * @param key the key of the UI option to get\n * @returns\n */\nexport function getUiOption(key: string): Promise<any> {\n  return syscall(\"editor.getUiOption\", key);\n}\n\n/**\n * Set the value of a UI option\n * @param key the key of the UI option to set\n * @param value the value to set the UI option to\n */\nexport function setUiOption(key: string, value: any): Promise<void> {\n  return syscall(\"editor.setUiOption\", key, value);\n}\n\n/**\n * Perform a fold at the current cursor position\n */\nexport function fold(): Promise<void> {\n  return syscall(\"editor.fold\");\n}\n\n/**\n * Perform an unfold at the current cursor position\n */\nexport function unfold(): Promise<void> {\n  return syscall(\"editor.unfold\");\n}\n\n/**\n * Toggle the fold at the current cursor position\n */\nexport function toggleFold(): Promise<void> {\n  return syscall(\"editor.toggleFold\");\n}\n\n/**\n * Fold all code blocks in the editor\n */\nexport function foldAll(): Promise<void> {\n  return syscall(\"editor.foldAll\");\n}\n\n/**\n * Unfold all code blocks in the editor\n */\nexport function unfoldAll(): Promise<void> {\n  return syscall(\"editor.unfoldAll\");\n}\n\n/**\n * Perform an undo operation of the last edit in the editor\n */\nexport function undo(): Promise<void> {\n  return syscall(\"editor.undo\");\n}\n\n/**\n * Perform a redo operation of the last undo in the editor\n */\nexport function redo(): Promise<void> {\n  return syscall(\"editor.redo\");\n}\n\n/**\n * Open the editor's native search panel\n */\nexport function openSearchPanel(): Promise<void> {\n  return syscall(\"editor.openSearchPanel\");\n}\n\n/**\n * Copy the specified data to the clipboard\n * @param data the data to copy\n */\nexport function copyToClipboard(data: string | Blob): Promise<void> {\n  return syscall(\"editor.copyToClipboard\", data);\n}\n\n/**\n * Delete the current line in the editor\n */\nexport function deleteLine(): Promise<void> {\n  return syscall(\"editor.deleteLine\");\n}\n\n// Vim-mode specific syscalls\n\n/**\n * Execute a Vim ex command\n * @param exCommand the ex command to execute\n */\nexport function vimEx(exCommand: string): Promise<any> {\n  return syscall(\"editor.vimEx\", exCommand);\n}\n\n// denoCacheMetadata={\"headers\":{\"cross-origin-resource-policy\":\"cross-origin\",\"x-goog-metageneration\":\"1\",\"cache-control\":\"public, max-age=31536000, immutable\",\"date\":\"Sat, 16 Nov 2024 01:41:45 GMT\",\"last-modified\":\"Thu, 14 Nov 2024 20:29:33 GMT\",\"x-guploader-uploadid\":\"AFiumC7jzwe9AABiP0oP8Pp9xnJoD0nNIvNQQnzqjiW9hEiBoKIOqkh1VsnywJeG2ltrGRwVQg8\",\"x-jsr-cache-id\":\"MEL\",\"etag\":\"\\\"2da2bb30e03c22c1cfb7ebdc016c18af\\\"\",\"access-control-allow-origin\":\"*\",\"expires\":\"Sun, 16 Nov 2025 01:41:45 GMT\",\"alt-svc\":\"h3=\\\":443\\\"; ma=2592000,h3-29=\\\":443\\\"; ma=2592000\",\"x-goog-stored-content-encoding\":\"identity\",\"content-length\":\"10378\",\"server\":\"UploadServer\",\"x-goog-stored-content-length\":\"10378\",\"x-goog-generation\":\"1731616173070607\",\"accept-ranges\":\"bytes\",\"content-security-policy\":\"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';\",\"x-jsr-cache-status\":\"miss\",\"content-type\":\"text/typescript\",\"x-robots-tag\":\"noindex\",\"access-control-expose-headers\":\"*\",\"x-content-type-options\":\"nosniff\",\"via\":\"1.1 google\",\"x-goog-storage-class\":\"STANDARD\",\"x-goog-hash\":\"crc32c=Wz1DJA==,md5=LaK7MOA8IsHPt+vcAWwYrw==\"},\"url\":\"https://jsr.io/@silverbulletmd/silverbullet/0.10.1/plug-api/syscalls/editor.ts\",\"time\":1731721308}", "// declare global {\n//   function syscall(name: string, ...args: any[]): Promise<any>;\n// }\n\n// This is the case when running tests only, so giving it a dummy syscall function\nif (typeof self === \"undefined\") {\n  (self as any) = {\n    syscall: () => {\n      throw new Error(\"Not implemented here\");\n    },\n  };\n}\n\n// Late binding syscall\nexport function syscall(name: string, ...args: any[]): Promise<any> {\n  return (globalThis as any).syscall(name, ...args);\n}\n\n// denoCacheMetadata={\"headers\":{\"last-modified\":\"Thu, 14 Nov 2024 20:29:33 GMT\",\"x-goog-stored-content-length\":\"463\",\"content-type\":\"text/typescript\",\"server\":\"UploadServer\",\"content-length\":\"463\",\"cache-control\":\"public, max-age=31536000, immutable\",\"accept-ranges\":\"bytes\",\"x-robots-tag\":\"noindex\",\"x-content-type-options\":\"nosniff\",\"alt-svc\":\"h3=\\\":443\\\"; ma=2592000,h3-29=\\\":443\\\"; ma=2592000\",\"x-jsr-cache-id\":\"MEL\",\"access-control-allow-origin\":\"*\",\"cross-origin-resource-policy\":\"cross-origin\",\"x-goog-stored-content-encoding\":\"identity\",\"x-goog-hash\":\"crc32c=OlP20w==,md5=f1H/ZQy7RMwFdZBnfRRuqA==\",\"x-goog-generation\":\"1731616173690053\",\"x-goog-storage-class\":\"STANDARD\",\"via\":\"1.1 google\",\"etag\":\"\\\"7f51ff650cbb44cc057590677d146ea8\\\"\",\"date\":\"Sat, 16 Nov 2024 01:41:45 GMT\",\"x-guploader-uploadid\":\"AFiumC5XImI7zSyXn3JVHfG6kiA4stODEoM6bl4IsdlYOp26cdX-GnnxuAWqAYAxfooeyUlq6ObFtLlfQQ\",\"content-security-policy\":\"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';\",\"x-jsr-cache-status\":\"miss\",\"access-control-expose-headers\":\"*\",\"expires\":\"Sun, 16 Nov 2025 01:41:45 GMT\",\"x-goog-metageneration\":\"1\"},\"url\":\"https://jsr.io/@silverbulletmd/silverbullet/0.10.1/plug-api/syscall.ts\",\"time\":1731721308}", "import { syscall } from \"../syscall.ts\";\nimport type { ParseTree } from \"../lib/tree.ts\";\n\n/**\n * Parses a piece of markdown text into a ParseTree.\n * @param text the markdown text to parse\n * @returns a ParseTree representation of the markdown text\n */\nexport function parseMarkdown(text: string): Promise<ParseTree> {\n  return syscall(\"markdown.parseMarkdown\", text);\n}\n\n/**\n * Renders a ParseTree to markdown.\n * @param tree the parse tree\n * @returns the rendered markdown of a passed parse tree\n */\nexport function renderParseTree(tree: ParseTree): Promise<string> {\n  return syscall(\"markdown.renderParseTree\", tree);\n}\n\n// denoCacheMetadata={\"headers\":{\"x-content-type-options\":\"nosniff\",\"alt-svc\":\"h3=\\\":443\\\"; ma=2592000,h3-29=\\\":443\\\"; ma=2592000\",\"x-goog-metageneration\":\"1\",\"x-goog-generation\":\"1731616173690124\",\"content-type\":\"text/typescript\",\"x-guploader-uploadid\":\"AFiumC5KmkyaiXF-97w-6EscJ7jnlNGx0VzvcO83GEAPBFJbFnCJ-eWLEGylbZGd3_Svk0q-N2o5HJFF5A\",\"accept-ranges\":\"bytes\",\"x-goog-stored-content-encoding\":\"identity\",\"access-control-allow-origin\":\"*\",\"x-goog-storage-class\":\"STANDARD\",\"via\":\"1.1 google\",\"access-control-expose-headers\":\"*\",\"x-robots-tag\":\"noindex\",\"cache-control\":\"public, max-age=31536000, immutable\",\"x-goog-hash\":\"crc32c=g3C7hQ==,md5=ZF3zxTMeOq7i2LiMR5mhAQ==\",\"expires\":\"Sun, 16 Nov 2025 01:41:45 GMT\",\"last-modified\":\"Thu, 14 Nov 2024 20:29:33 GMT\",\"server\":\"UploadServer\",\"date\":\"Sat, 16 Nov 2024 01:41:45 GMT\",\"etag\":\"\\\"645df3c5331e3aaee2d8b88c4799a101\\\"\",\"content-length\":\"626\",\"x-jsr-cache-id\":\"MEL\",\"content-security-policy\":\"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';\",\"x-goog-stored-content-length\":\"626\",\"x-jsr-cache-status\":\"miss\",\"cross-origin-resource-policy\":\"cross-origin\"},\"url\":\"https://jsr.io/@silverbulletmd/silverbullet/0.10.1/plug-api/syscalls/markdown.ts\",\"time\":1731721308}", "import type { CommandDef } from \"../../lib/command.ts\";\nimport type { SyscallMeta } from \"../types.ts\";\nimport type { ParseTree } from \"../lib/tree.ts\";\nimport { syscall } from \"../syscall.ts\";\nimport type { Config } from \"../../type/config.ts\";\n\n/**\n * System level syscalls\n * @module\n */\n\n/**\n * Invoke a plug function\n * @param name a string representing the name of the function to invoke (\"plug.functionName\")\n * @param args arguments to pass to the function\n * @returns\n */\nexport function invokeFunction(\n  name: string,\n  ...args: any[]\n): Promise<any> {\n  return syscall(\"system.invokeFunction\", name, ...args);\n}\n\n/**\n * Invoke a client command by name\n * Note: only available on the client\n * @param name name of the command\n * @param args arguments to pass to the command\n */\nexport function invokeCommand(name: string, args?: string[]): Promise<any> {\n  return syscall(\"system.invokeCommand\", name, args);\n}\n\n/**\n * Lists all commands available\n * @returns a map of all available commands\n */\nexport function listCommands(): Promise<Record<string, CommandDef>> {\n  return syscall(\"system.listCommands\");\n}\n\n/**\n * Lists all syscalls available\n * @returns a list of all available syscalls\n */\nexport function listSyscalls(): Promise<SyscallMeta[]> {\n  return syscall(\"system.listSyscalls\");\n}\n\n/**\n * Invoke a space function by name\n * @param name a string representing the name of the function to invoke\n * @param args arguments to pass to the function\n * @returns the value returned by the function\n */\nexport function invokeSpaceFunction(\n  name: string,\n  ...args: any[]\n): Promise<any> {\n  return syscall(\"system.invokeSpaceFunction\", name, ...args);\n}\n\n/**\n * Applies attribute extractors to a ParseTree\n */\nexport function applyAttributeExtractors(\n  tags: string[],\n  text: string,\n  tree: ParseTree,\n): Promise<Record<string, any>[]> {\n  return syscall(\"system.applyAttributeExtractors\", tags, text, tree);\n}\n\n/**\n * Loads a particular space configuration key (or all of them when no key is spacified)\n * @param key the key to load, when not specified, all keys are loaded\n * @param defaultValue the default value to return when the key is not found\n * @returns either the value of the key or all keys as a Record<string, any>\n */\nexport async function getSpaceConfig(\n  key?: string,\n  defaultValue?: any,\n): Promise<any> {\n  return (await syscall(\"system.getSpaceConfig\", key)) ?? defaultValue;\n}\n\n/**\n * Trigger a reload of all plugs\n * @returns\n */\nexport function reloadPlugs(): Promise<void> {\n  return syscall(\"system.reloadPlugs\");\n}\n\n/**\n * Trigger an explicit reload of the configuration\n * @returns the new configuration\n */\nexport function reloadConfig(): Promise<Config> {\n  return syscall(\"system.reloadConfig\");\n}\n\n/**\n * Returns what runtime environment this plug is run in, e.g. \"server\" or \"client\" can be undefined, which would mean a hybrid environment (such as mobile)\n */\nexport function getEnv(): Promise<string | undefined> {\n  return syscall(\"system.getEnv\");\n}\n\n/**\n * Returns the current mode of the system, either \"ro\" (read-only) or \"rw\" (read-write)\n */\nexport function getMode(): Promise<\"ro\" | \"rw\"> {\n  return syscall(\"system.getMode\");\n}\n\n/**\n * Returns the SilverBullet version\n */\nexport function getVersion(): Promise<string> {\n  return syscall(\"system.getVersion\");\n}\n\n// denoCacheMetadata={\"headers\":{\"x-jsr-cache-status\":\"miss\",\"access-control-allow-origin\":\"*\",\"x-content-type-options\":\"nosniff\",\"x-goog-metageneration\":\"1\",\"access-control-expose-headers\":\"*\",\"x-jsr-cache-id\":\"MEL\",\"content-length\":\"3328\",\"x-guploader-uploadid\":\"AFiumC7Uqs9iLHyl5aTGuoeGCMCXIppzjCLFGLYNNs84PEQXDt74Wc2yTG48R_8s5ev_i__XegTioCk1pA\",\"alt-svc\":\"h3=\\\":443\\\"; ma=2592000,h3-29=\\\":443\\\"; ma=2592000\",\"cross-origin-resource-policy\":\"cross-origin\",\"x-goog-storage-class\":\"STANDARD\",\"x-goog-stored-content-encoding\":\"identity\",\"accept-ranges\":\"bytes\",\"x-goog-generation\":\"1731616173602074\",\"x-goog-stored-content-length\":\"3328\",\"x-robots-tag\":\"noindex\",\"date\":\"Sat, 16 Nov 2024 01:41:45 GMT\",\"last-modified\":\"Thu, 14 Nov 2024 20:29:33 GMT\",\"etag\":\"\\\"bcbccc00a7974fadcd5b2c71497b484f\\\"\",\"cache-control\":\"public, max-age=31536000, immutable\",\"via\":\"1.1 google\",\"content-security-policy\":\"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';\",\"content-type\":\"text/typescript\",\"expires\":\"Sun, 16 Nov 2025 01:41:45 GMT\",\"x-goog-hash\":\"crc32c=ZWMKMQ==,md5=vLzMAKeXT63NWyxxSXtITw==\",\"server\":\"UploadServer\"},\"url\":\"https://jsr.io/@silverbulletmd/silverbullet/0.10.1/plug-api/syscalls/system.ts\",\"time\":1731721308}", "import { syscall } from \"../syscall.ts\";\n\n/**\n * Implements a very simple (string) key value store for the client.\n * Generally should only be used to set some client-specific states, such as preferences.\n * @module\n */\n\n/**\n * Sets a value in the client store.\n * @param key the key to set\n * @param value the value to set\n */\nexport function set(key: string, value: any): Promise<void> {\n  return syscall(\"clientStore.set\", key, value);\n}\n\n/**\n * Gets a value from the client store.\n * @param key the key to get\n * @returns the value associated with the key\n */\nexport function get(key: string): Promise<any> {\n  return syscall(\"clientStore.get\", key);\n}\n\n/**\n * Deletes a value from the client store.\n * @param key the key to delete\n */\nexport function del(key: string): Promise<void> {\n  return syscall(\"clientStore.delete\", key);\n}\n\n// denoCacheMetadata={\"headers\":{\"x-jsr-cache-status\":\"miss\",\"date\":\"Sat, 16 Nov 2024 01:41:45 GMT\",\"expires\":\"Sun, 16 Nov 2025 01:41:45 GMT\",\"x-goog-metageneration\":\"1\",\"content-length\":\"837\",\"x-goog-stored-content-encoding\":\"identity\",\"x-robots-tag\":\"noindex\",\"alt-svc\":\"h3=\\\":443\\\"; ma=2592000,h3-29=\\\":443\\\"; ma=2592000\",\"access-control-expose-headers\":\"*\",\"x-content-type-options\":\"nosniff\",\"x-goog-stored-content-length\":\"837\",\"cache-control\":\"public, max-age=31536000, immutable\",\"content-security-policy\":\"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';\",\"cross-origin-resource-policy\":\"cross-origin\",\"access-control-allow-origin\":\"*\",\"content-type\":\"text/typescript\",\"x-goog-generation\":\"1731616173602680\",\"x-goog-hash\":\"crc32c=m/vu0Q==,md5=sqPcPGX6ASrHBjS2sRSenw==\",\"accept-ranges\":\"bytes\",\"x-jsr-cache-id\":\"MEL\",\"x-goog-storage-class\":\"STANDARD\",\"x-guploader-uploadid\":\"AFiumC6JOsPVoXQuq_uWponpjjH71HW4PdpayclOUVUMljse3zRnFBE7p-21oKHgHJ4I1T-NoDuaMULIIA\",\"etag\":\"\\\"b2a3dc3c65fa012ac70634b6b1149e9f\\\"\",\"server\":\"UploadServer\",\"via\":\"1.1 google\",\"last-modified\":\"Thu, 14 Nov 2024 20:29:33 GMT\"},\"url\":\"https://jsr.io/@silverbulletmd/silverbullet/0.10.1/plug-api/syscalls/clientStore.ts\",\"time\":1731721308}", "import { base64DecodeDataUrl } from \"../../lib/crypto.ts\";\nimport { syscall } from \"../syscall.ts\";\n\n/**\n * Reads an asset embedded in a plug (via the `assets` field in the plug manifest).\n * @param plugName name of the plug to read asset from\n * @param name name of the asset to read\n * @param encoding either \"utf8\" or \"dataurl\"\n * @returns the content of the asset in the requested encoding\n */\nexport async function readAsset(\n  plugName: string,\n  name: string,\n  encoding: \"utf8\" | \"dataurl\" = \"utf8\",\n): Promise<string> {\n  const dataUrl = await syscall(\"asset.readAsset\", plugName, name) as string;\n  switch (encoding) {\n    case \"utf8\":\n      return new TextDecoder().decode(base64DecodeDataUrl(dataUrl));\n    case \"dataurl\":\n      return dataUrl;\n  }\n}\n\n// denoCacheMetadata={\"headers\":{\"x-jsr-cache-id\":\"MEL\",\"x-jsr-cache-status\":\"miss\",\"access-control-expose-headers\":\"*\",\"x-content-type-options\":\"nosniff\",\"alt-svc\":\"h3=\\\":443\\\"; ma=2592000,h3-29=\\\":443\\\"; ma=2592000\",\"last-modified\":\"Thu, 14 Nov 2024 20:29:33 GMT\",\"content-type\":\"text/typescript\",\"x-guploader-uploadid\":\"AFiumC5DvVlcvCLNYCF4_R1JdkfTNyGN7PVtdm7mGeNKjkzGx1J-TAKUsqRFSzLe-9thDXaqsvCAXp3jkw\",\"x-robots-tag\":\"noindex\",\"cross-origin-resource-policy\":\"cross-origin\",\"cache-control\":\"public, max-age=31536000, immutable\",\"expires\":\"Sun, 16 Nov 2025 01:41:45 GMT\",\"x-goog-hash\":\"crc32c=cX20Sg==,md5=XsD9jAdyju3EhaWK5NUASg==\",\"via\":\"1.1 google\",\"access-control-allow-origin\":\"*\",\"x-goog-storage-class\":\"STANDARD\",\"etag\":\"\\\"5ec0fd8c07728eedc485a58ae4d5004a\\\"\",\"x-goog-generation\":\"1731616173574242\",\"x-goog-metageneration\":\"1\",\"date\":\"Sat, 16 Nov 2024 01:41:45 GMT\",\"x-goog-stored-content-length\":\"763\",\"content-length\":\"763\",\"server\":\"UploadServer\",\"x-goog-stored-content-encoding\":\"identity\",\"accept-ranges\":\"bytes\",\"content-security-policy\":\"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';\"},\"url\":\"https://jsr.io/@silverbulletmd/silverbullet/0.10.1/plug-api/syscalls/asset.ts\",\"time\":1731721308}", "export function simpleHash(s: string): number {\n  let hash = 0,\n    i,\n    chr;\n  if (s.length === 0) return hash;\n  for (i = 0; i < s.length; i++) {\n    chr = s.charCodeAt(i);\n    hash = ((hash << 5) - hash) + chr;\n    hash |= 0; // Convert to 32bit integer\n  }\n  return hash;\n}\n\nexport function base64Decode(s: string): Uint8Array {\n  const binString = atob(s);\n  const len = binString.length;\n  const bytes = new Uint8Array(len);\n  for (let i = 0; i < len; i++) {\n    bytes[i] = binString.charCodeAt(i);\n  }\n  return bytes;\n}\n\nexport function base64Encode(buffer: Uint8Array | string): string {\n  if (typeof buffer === \"string\") {\n    buffer = new TextEncoder().encode(buffer);\n  }\n  let binary = \"\";\n  const len = buffer.byteLength;\n  for (let i = 0; i < len; i++) {\n    binary += String.fromCharCode(buffer[i]);\n  }\n  return btoa(binary);\n}\n\nexport function base64EncodedDataUrl(\n  mimeType: string,\n  buffer: Uint8Array,\n): string {\n  return `data:${mimeType};base64,${base64Encode(buffer)}`;\n}\n\nexport function base64DecodeDataUrl(dataUrl: string): Uint8Array {\n  const b64Encoded = dataUrl.split(\",\", 2)[1];\n  return base64Decode(b64Encoded);\n}\n\n// denoCacheMetadata={\"headers\":{\"date\":\"Sat, 16 Nov 2024 01:41:45 GMT\",\"x-goog-stored-content-length\":\"1153\",\"access-control-expose-headers\":\"*\",\"expires\":\"Sun, 16 Nov 2025 01:41:45 GMT\",\"x-goog-stored-content-encoding\":\"identity\",\"content-type\":\"text/typescript\",\"cache-control\":\"public, max-age=31536000, immutable\",\"content-length\":\"1153\",\"cross-origin-resource-policy\":\"cross-origin\",\"alt-svc\":\"h3=\\\":443\\\"; ma=2592000,h3-29=\\\":443\\\"; ma=2592000\",\"x-goog-hash\":\"crc32c=x5JhOQ==,md5=uvhwXscyvQMqJLAUC4zatw==\",\"x-content-type-options\":\"nosniff\",\"etag\":\"\\\"baf8705ec732bd032a24b0140b8cdab7\\\"\",\"content-security-policy\":\"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';\",\"x-guploader-uploadid\":\"AFiumC7CPjIiPYKk7Xj4ljqQvSEVuUn-nx9-88VvSMCcGEDV680DSBleQYgGifIoxgQLhdAl2rLUl2gptw\",\"via\":\"1.1 google\",\"x-robots-tag\":\"noindex\",\"access-control-allow-origin\":\"*\",\"x-goog-generation\":\"1731616173712245\",\"server\":\"UploadServer\",\"x-goog-metageneration\":\"1\",\"last-modified\":\"Thu, 14 Nov 2024 20:29:33 GMT\",\"accept-ranges\":\"bytes\",\"x-goog-storage-class\":\"STANDARD\",\"x-jsr-cache-id\":\"MEL\",\"x-jsr-cache-status\":\"miss\"},\"url\":\"https://jsr.io/@silverbulletmd/silverbullet/0.10.1/lib/crypto.ts\",\"time\":1731721308}", "export type ParseTree = {\n  type?: string; // undefined === text node\n  from?: number;\n  to?: number;\n  text?: string;\n  children?: ParseTree[];\n  // Only present after running addParentPointers\n  parent?: ParseTree;\n};\n\nexport type AST = [string, ...AST[]] | string;\n\nexport function addParentPointers(tree: ParseTree) {\n  if (!tree.children) {\n    return;\n  }\n  for (const child of tree.children) {\n    if (child.parent) {\n      // Already added parent pointers before\n      return;\n    }\n    child.parent = tree;\n    addParentPointers(child);\n  }\n}\n\nexport function removeParentPointers(tree: ParseTree) {\n  delete tree.parent;\n  if (!tree.children) {\n    return;\n  }\n  for (const child of tree.children) {\n    removeParentPointers(child);\n  }\n}\n\nexport function findParentMatching(\n  tree: ParseTree,\n  matchFn: (tree: ParseTree) => boolean,\n): ParseTree | null {\n  let node = tree.parent;\n  while (node) {\n    if (matchFn(node)) {\n      return node;\n    }\n    node = node.parent;\n  }\n  return null;\n}\n\nexport function collectNodesOfType(\n  tree: ParseTree,\n  nodeType: string,\n): ParseTree[] {\n  return collectNodesMatching(tree, (n) => n.type === nodeType);\n}\n\nexport function collectNodesMatching(\n  tree: ParseTree,\n  matchFn: (tree: ParseTree) => boolean,\n): ParseTree[] {\n  if (matchFn(tree)) {\n    return [tree];\n  }\n  let results: ParseTree[] = [];\n  if (tree.children) {\n    for (const child of tree.children) {\n      results = [...results, ...collectNodesMatching(child, matchFn)];\n    }\n  }\n  return results;\n}\n\nexport async function collectNodesMatchingAsync(\n  tree: ParseTree,\n  matchFn: (tree: ParseTree) => Promise<boolean>,\n): Promise<ParseTree[]> {\n  if (await matchFn(tree)) {\n    return [tree];\n  }\n  let results: ParseTree[] = [];\n  if (tree.children) {\n    for (const child of tree.children) {\n      results = [\n        ...results,\n        ...await collectNodesMatchingAsync(child, matchFn),\n      ];\n    }\n  }\n  return results;\n}\n\n// return value: returning undefined = not matched, continue, null = delete, new node = replace\nexport function replaceNodesMatching(\n  tree: ParseTree,\n  substituteFn: (tree: ParseTree) => ParseTree | null | undefined,\n) {\n  if (tree.children) {\n    const children = tree.children.slice();\n    for (const child of children) {\n      const subst = substituteFn(child);\n      if (subst !== undefined) {\n        const pos = tree.children.indexOf(child);\n        if (subst) {\n          tree.children.splice(pos, 1, subst);\n        } else {\n          // null = delete\n          tree.children.splice(pos, 1);\n        }\n      } else {\n        replaceNodesMatching(child, substituteFn);\n      }\n    }\n  }\n}\n\nexport async function replaceNodesMatchingAsync(\n  tree: ParseTree,\n  substituteFn: (tree: ParseTree) => Promise<ParseTree | null | undefined>,\n) {\n  if (tree.children) {\n    const children = tree.children.slice();\n    for (const child of children) {\n      const subst = await substituteFn(child);\n      if (subst !== undefined) {\n        const pos = tree.children.indexOf(child);\n        if (subst) {\n          tree.children.splice(pos, 1, subst);\n        } else {\n          // null = delete\n          tree.children.splice(pos, 1);\n        }\n      } else {\n        await replaceNodesMatchingAsync(child, substituteFn);\n      }\n    }\n  }\n}\n\nexport function findNodeMatching(\n  tree: ParseTree,\n  matchFn: (tree: ParseTree) => boolean,\n): ParseTree | null {\n  return collectNodesMatching(tree, matchFn)[0];\n}\n\nexport function findNodeOfType(\n  tree: ParseTree,\n  nodeType: string,\n): ParseTree | null {\n  return collectNodesMatching(tree, (n) => n.type === nodeType)[0];\n}\n\nexport function traverseTree(\n  tree: ParseTree,\n  // Return value = should stop traversal?\n  matchFn: (tree: ParseTree) => boolean,\n): void {\n  // Do a collect, but ignore the result\n  collectNodesMatching(tree, matchFn);\n}\n\nexport async function traverseTreeAsync(\n  tree: ParseTree,\n  // Return value = should stop traversal?\n  matchFn: (tree: ParseTree) => Promise<boolean>,\n): Promise<void> {\n  // Do a collect, but ignore the result\n  await collectNodesMatchingAsync(tree, matchFn);\n}\n\n// Finds non-text node at position\nexport function nodeAtPos(tree: ParseTree, pos: number): ParseTree | null {\n  if (pos < tree.from! || pos >= tree.to!) {\n    return null;\n  }\n  if (!tree.children) {\n    return tree;\n  }\n  for (const child of tree.children) {\n    const n = nodeAtPos(child, pos);\n    if (n && n.text !== undefined) {\n      // Got a text node, let's return its parent\n      return tree;\n    } else if (n) {\n      // Got it\n      return n;\n    }\n  }\n  return null;\n}\n\n// Turn ParseTree back into text\nexport function renderToText(tree?: ParseTree): string {\n  if (!tree) {\n    return \"\";\n  }\n  const pieces: string[] = [];\n  if (tree.text !== undefined) {\n    return tree.text;\n  }\n  for (const child of tree.children!) {\n    pieces.push(renderToText(child));\n  }\n  return pieces.join(\"\");\n}\n\nexport function cloneTree(tree: ParseTree): ParseTree {\n  const newTree = { ...tree };\n  if (tree.children) {\n    newTree.children = tree.children.map(cloneTree);\n  }\n  delete newTree.parent;\n  return newTree;\n}\n\nexport function parseTreeToAST(tree: ParseTree, omitTrimmable = true): AST {\n  const parseErrorNodes = collectNodesOfType(tree, \"\u26A0\");\n  if (parseErrorNodes.length > 0) {\n    throw new Error(\n      `Parse error in: ${renderToText(tree)}`,\n    );\n  }\n  if (tree.text !== undefined) {\n    return tree.text;\n  }\n  const ast: AST = [tree.type!];\n  for (const node of tree.children!) {\n    if (node.type && !node.type.endsWith(\"Mark\") && node.type !== \"Comment\") {\n      ast.push(parseTreeToAST(node, omitTrimmable));\n    }\n    if (node.text && (omitTrimmable && node.text.trim() || !omitTrimmable)) {\n      ast.push(node.text);\n    }\n  }\n  return ast;\n}\n\nexport function cleanTree(tree: ParseTree, omitTrimmable = true): ParseTree {\n  const parseErrorNodes = collectNodesOfType(tree, \"\u26A0\");\n  if (parseErrorNodes.length > 0) {\n    throw new Error(\n      `Parse error (${parseErrorNodes[0].from}:${parseErrorNodes[0].to}): ${\n        renderToText(tree)\n      }`,\n    );\n  }\n  if (tree.text !== undefined) {\n    return tree;\n  }\n  const ast: ParseTree = {\n    type: tree.type,\n    children: [],\n    from: tree.from,\n    to: tree.to,\n  };\n  for (const node of tree.children!) {\n    if (node.type && node.type !== \"Comment\") {\n      ast.children!.push(cleanTree(node, omitTrimmable));\n    }\n    if (node.text && (omitTrimmable && node.text.trim() || !omitTrimmable)) {\n      ast.children!.push(node);\n    }\n  }\n  return ast;\n}\n\n// denoCacheMetadata={\"headers\":{\"content-security-policy\":\"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';\",\"expires\":\"Sun, 16 Nov 2025 01:41:45 GMT\",\"x-jsr-cache-id\":\"MEL\",\"etag\":\"\\\"4f999c31251c78d36796621c4c95ee6c\\\"\",\"x-jsr-cache-status\":\"miss\",\"content-length\":\"6566\",\"x-robots-tag\":\"noindex\",\"cross-origin-resource-policy\":\"cross-origin\",\"alt-svc\":\"h3=\\\":443\\\"; ma=2592000,h3-29=\\\":443\\\"; ma=2592000\",\"access-control-expose-headers\":\"*\",\"x-content-type-options\":\"nosniff\",\"x-goog-metageneration\":\"1\",\"x-goog-hash\":\"crc32c=cW8I0w==,md5=T5mcMSUceNNnlmIcTJXubA==\",\"access-control-allow-origin\":\"*\",\"x-goog-generation\":\"1731616173030516\",\"cache-control\":\"public, max-age=31536000, immutable\",\"last-modified\":\"Thu, 14 Nov 2024 20:29:33 GMT\",\"x-goog-stored-content-length\":\"6566\",\"content-type\":\"text/typescript\",\"date\":\"Sat, 16 Nov 2024 01:41:45 GMT\",\"x-goog-storage-class\":\"STANDARD\",\"x-guploader-uploadid\":\"AFiumC6WfOm6HCYOylDtWSppkNJi78Uno36gfd8FAaWZ7XCkK_mt9td_KsSrA9nzOcfcGs6w6HM\",\"x-goog-stored-content-encoding\":\"identity\",\"server\":\"UploadServer\",\"accept-ranges\":\"bytes\",\"via\":\"1.1 google\"},\"url\":\"https://jsr.io/@silverbulletmd/silverbullet/0.10.1/plug-api/lib/tree.ts\",\"time\":1731721308}", "import {\n  findNodeOfType,\n  type ParseTree,\n  renderToText,\n} from \"./tree.ts\";\n\n/**\n * Strips markdown from a ParseTree\n */\nexport function stripMarkdown(\n  tree: ParseTree,\n): string {\n  if (tree.type?.endsWith(\"Mark\") || tree.type?.endsWith(\"Delimiter\")) {\n    return \"\";\n  }\n\n  const stripArray = (arr: ParseTree[]) => arr.map(stripMarkdown).join(\"\");\n\n  switch (tree.type) {\n    case \"Document\":\n    case \"Emphasis\":\n    case \"Highlight\":\n    case \"Strikethrough\":\n    case \"InlineCode\":\n    case \"StrongEmphasis\":\n    case \"Superscript\":\n    case \"Subscript\":\n    case \"Paragraph\":\n    case \"ATXHeading1\":\n    case \"ATXHeading2\":\n    case \"ATXHeading3\":\n    case \"ATXHeading4\":\n    case \"ATXHeading5\":\n    case \"ATXHeading6\":\n    case \"Blockquote\":\n    case \"BulletList\":\n    case \"OrderedList\":\n    case \"ListItem\":\n    case \"Table\":\n    case \"TableHeader\":\n    case \"TableCell\":\n    case \"TableRow\":\n    case \"Task\":\n    case \"HTMLTag\": {\n      return stripArray(tree.children!);\n    }\n\n    case \"FencedCode\":\n    case \"CodeBlock\": {\n      tree.children = tree.children!.filter((c) => c.type);\n      return stripArray(tree.children!);\n    }\n\n    case \"Link\": {\n      const linkTextChildren = tree.children!.slice(1, -4);\n      return stripArray(linkTextChildren);\n    }\n\n    case \"Image\": {\n      const altTextNode = findNodeOfType(tree, \"WikiLinkAlias\") ||\n        tree.children![1];\n      let altText = altTextNode && altTextNode.type !== \"LinkMark\"\n        ? renderToText(altTextNode)\n        : \"<Image>\";\n\n      const dimReg = /\\d*[^\\|\\s]*?[xX]\\d*[^\\|\\s]*/.exec(altText);\n      if (dimReg) {\n        altText = altText.replace(dimReg[0], \"\").replace(\"|\", \"\");\n      }\n\n      return altText;\n    }\n\n    case \"WikiLink\": {\n      const aliasNode = findNodeOfType(tree, \"WikiLinkAlias\");\n\n      let linkText;\n      if (aliasNode) {\n        linkText = aliasNode.children![0].text!;\n      } else {\n        const ref = findNodeOfType(tree, \"WikiLinkPage\")!.children![0].text!;\n        linkText = ref.split(\"/\").pop()!;\n      }\n\n      return linkText;\n    }\n\n    case \"NakedURL\": {\n      const url = tree.children![0].text!;\n      return url;\n    }\n\n    case \"CommandLink\": {\n      const aliasNode = findNodeOfType(tree, \"CommandLinkAlias\");\n\n      let command;\n      if (aliasNode) {\n        command = aliasNode.children![0].text!;\n      } else {\n        command = tree.children![1].children![0].text!;\n      }\n\n      return command;\n    }\n\n    case \"TaskState\": {\n      return tree.children![1].text!;\n    }\n\n    case \"Escape\": {\n      return tree.children![0].text!.slice(1);\n    }\n\n    case \"CodeText\":\n    case \"Entity\": {\n      return tree.children![0].text!;\n    }\n\n    case \"TemplateDirective\":\n    case \"DeadlineDate\": {\n      return renderToText(tree);\n    }\n\n    case \"CodeInfo\":\n    case \"CommentBlock\":\n    case \"FrontMatter\":\n    case \"Hashtag\":\n    case \"HardBreak\":\n    case \"HorizontalRule\":\n    case \"NamedAnchor\":\n    case \"Attribute\": {\n      return \"\";\n    }\n\n    case undefined:\n      return tree.text!;\n\n    default:\n      console.log(\"Unknown tree type: \", tree.type);\n      return \"\";\n  }\n}\n\n// denoCacheMetadata={\"headers\":{\"date\":\"Sat, 16 Nov 2024 01:41:45 GMT\",\"content-security-policy\":\"default-src 'none'; script-src 'none'; style-src 'none'; img-src 'none'; font-src 'none'; connect-src 'none'; frame-src 'none'; object-src 'none'; frame-ancestors 'none'; sandbox; form-action 'none';\",\"cache-control\":\"public, max-age=31536000, immutable\",\"last-modified\":\"Thu, 14 Nov 2024 20:29:32 GMT\",\"x-goog-generation\":\"1731616172950142\",\"content-type\":\"text/typescript\",\"content-length\":\"3120\",\"x-guploader-uploadid\":\"AFiumC4Iz3LYPLiEye-8vEquL6rkc5lkxQtJ5ywfLaqPoNZzseaP2x3zr6Z0dhIemLrjBjoi2rt21yJzGA\",\"x-jsr-cache-status\":\"miss\",\"x-jsr-cache-id\":\"MEL\",\"access-control-expose-headers\":\"*\",\"cross-origin-resource-policy\":\"cross-origin\",\"x-robots-tag\":\"noindex\",\"x-content-type-options\":\"nosniff\",\"alt-svc\":\"h3=\\\":443\\\"; ma=2592000,h3-29=\\\":443\\\"; ma=2592000\",\"x-goog-stored-content-encoding\":\"identity\",\"accept-ranges\":\"bytes\",\"via\":\"1.1 google\",\"x-goog-metageneration\":\"1\",\"x-goog-storage-class\":\"STANDARD\",\"server\":\"UploadServer\",\"access-control-allow-origin\":\"*\",\"etag\":\"\\\"0d20ea322987c1b6a9d702dc75fea899\\\"\",\"x-goog-hash\":\"crc32c=JVQrcA==,md5=DSDqMimHwbap1wLcdf6omQ==\",\"x-goog-stored-content-length\":\"3120\",\"expires\":\"Sun, 16 Nov 2025 01:41:45 GMT\"},\"url\":\"https://jsr.io/@silverbulletmd/silverbullet/0.10.1/plug-api/lib/markdown.ts\",\"time\":1731721308}", "import {\r\n    asset,\r\n    clientStore,\r\n    editor,\r\n    markdown,\r\n    system,\r\n} from \"@silverbulletmd/silverbullet/syscalls\";\r\nimport { stripMarkdown } from \"@silverbulletmd/silverbullet/lib/markdown\";\r\nimport { traverseTree } from \"@silverbulletmd/silverbullet/lib/tree\";\r\n\r\ntype Header = {\r\n    name: string;\r\n    pos: number;\r\n    level: number;\r\n};\r\n\r\ntype OutlineSBConfig = {\r\n    header?: boolean;\r\n};\r\n\r\nconst PLUG_NAME = \"outline-sidebar\";\r\n\r\nconst OSB_STATE_KEY = \"enableOutlineSidebar\";\r\n\r\nasync function isOSBEnabled() {\r\n    return !!(await clientStore.get(OSB_STATE_KEY));\r\n}\r\n\r\nasync function setOSBEnabled(value: boolean) {\r\n    return await clientStore.set(OSB_STATE_KEY, value);\r\n}\r\n\r\nexport async function hideOutlineSidebar() {\r\n    await editor.hidePanel(\"rhs\");\r\n    await setOSBEnabled(false);\r\n}\r\n\r\nexport async function toggleOutlineSidebar() {\r\n    const currentState = await isOSBEnabled();\r\n    if (!currentState) {\r\n        await showOutlineSidebar();\r\n    } else {\r\n        await hideOutlineSidebar();\r\n    }\r\n}\r\n\r\nexport async function showOSBIfEnabled() {\r\n    try {\r\n        const env = await system.getEnv();\r\n        if (env === \"server\") {\r\n            return;\r\n        }\r\n\r\n        if (await isOSBEnabled()) {\r\n            return await showOutlineSidebar();\r\n        }\r\n    } catch (e) {\r\n        console.error(`${PLUG_NAME}: showOSBIfEnabled failed`, e);\r\n    }\r\n}\r\n\r\nexport async function showOutlineSidebar(): Promise<any | null> {\r\n    let config: OutlineSBConfig = {};\r\n\r\n    const [plugJs] = await Promise.all([\r\n        asset.readAsset(PLUG_NAME, \"assets/outline-sidebar.js\"),\r\n    ]);\r\n\r\n    const page = await editor.getCurrentPage();\r\n    const text = await editor.getText();\r\n    const tree = await markdown.parseMarkdown(text);\r\n    const headers: Header[] = [];\r\n\r\n    traverseTree(tree, (n) => {\r\n        if (n.type?.startsWith(\"ATXHeading\")) {\r\n            headers.push({\r\n                name: n.children!.slice(1).map(stripMarkdown).join(\"\").trim(),\r\n                pos: n.from!,\r\n                level: +n.type[n.type.length - 1],\r\n            });\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    });\r\n\r\n    if (headers.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    let finalHtml = \"\";\r\n    let lastLevel = 0;\r\n\r\n    headers.map((header, index, arr) => {\r\n        let level = header.level;\r\n\r\n        if (index === 0) {\r\n            finalHtml += `<ul>`;\r\n        } else if (level > lastLevel) {\r\n            for (let i = 0; i < level - lastLevel; ++i) {\r\n                finalHtml += `<ul>`;\r\n            }\r\n        } else if (level < lastLevel) {\r\n            for (let i = 0; i < lastLevel - level; ++i) {\r\n                finalHtml += `</ul>`;\r\n            }\r\n        }\r\n        finalHtml += `\r\n            <li><span class=\"p wiki-link osb-clickable\" data-osbpos=\"${header.pos}\">${header.name}</span><li>`;\r\n\r\n        if (index === arr.length - 1) {\r\n            finalHtml += `</ul>`;\r\n        }\r\n\r\n        lastLevel = level;\r\n    });\r\n\r\n    await editor.showPanel(\r\n        \"rhs\",\r\n        0.5,\r\n        `\r\n        <link rel=\"stylesheet\" href=\"/.client/main.css\" />\r\n        <div id=\"outline-sidebar-root\">\r\n            ${finalHtml}\r\n        </div>\r\n        `,\r\n        `\r\n        ${plugJs}\r\n        `,\r\n    );\r\n\r\n    await setOSBEnabled(true);\r\n}\r\n", "\nimport { setupMessageListener } from \"https://deno.land/x/silverbullet@0.10.1/lib/plugos/worker_runtime.ts\";\n\n// Imports\nimport {showOutlineSidebar as showOutlineSidebar} from \"file://D:\\\\code\\\\Github\\\\outline-sidebar\\\\outline-sidebar.ts\";\nimport {hideOutlineSidebar as hideOutlineSidebar} from \"file://D:\\\\code\\\\Github\\\\outline-sidebar\\\\outline-sidebar.ts\";\nimport {showOSBIfEnabled as showOSBIfEnabled} from \"file://D:\\\\code\\\\Github\\\\outline-sidebar\\\\outline-sidebar.ts\";\nimport {toggleOutlineSidebar as toggle} from \"file://D:\\\\code\\\\Github\\\\outline-sidebar\\\\outline-sidebar.ts\";\n\n\n// Function mapping\nconst functionMapping = {\n  showOutlineSidebar: showOutlineSidebar,\n  hideOutlineSidebar: hideOutlineSidebar,\n  showOSBIfEnabled: showOSBIfEnabled,\n  toggle: toggle,\n\n};\n\n// Manifest\nconst manifest = {\n  \"name\": \"outline-sidebar\",\n  \"functions\": {\n    \"showOutlineSidebar\": {\n      \"path\": \"./outline-sidebar.ts:showOutlineSidebar\"\n    },\n    \"hideOutlineSidebar\": {\n      \"path\": \"./outline-sidebar.ts:hideOutlineSidebar\"\n    },\n    \"showOSBIfEnabled\": {\n      \"path\": \"./outline-sidebar.ts:showOSBIfEnabled\",\n      \"evnets\": [\n        \"editor:init\",\n        \"editor:pageLoaded\",\n        \"editor:pageSaved\"\n      ]\n    },\n    \"toggle\": {\n      \"path\": \"./outline-sidebar.ts:toggleOutlineSidebar\",\n      \"command\": {\n        \"name\": \"Outline Sidebar: Toggle\",\n        \"key\": \"Ctrl-alt-o\",\n        \"mac\": \"Cmd-alt-o\"\n      }\n    }\n  },\n  \"assets\": {}\n};\n\nexport const plug = {manifest, functionMapping};\n\nsetupMessageListener(functionMapping, manifest, self.postMessage);\n"],
  "mappings": ";;;;;;;AAQA,IAAI,oBAAoB,CAAC,SAAkC;AACzD,QAAM,IAAI,MAAM,qBAAqB;AACvC;AAUA,IAAM,qBAAqB,OAAO,WAAW;AAE3C,OAAO,WAAW,kBAAkB;AAEtC,IAAI,OAAO,SAAS,aAAa;AAE/B,OAAK,OAAO;AAAA,IACV,MAAM,CAAC;AAAA;AAAA,IAEP,OAAO;AAAA,MACL,MAAM;AAAA,IACR;AAAA,IACA,KAAK;AAAA;AAAA,MAEH,MAAM;AAAA,MACN;AAAA,IACF;AAAA,EACF;AACF;AAEA,IAAM,kBAAkB,oBAAI,IAM1B;AAEF,IAAI,eAAe;AAEnB,IAAI,oBAAoB;AACtB,aAAW,UAAU,OAAO,SAAiB,SAAgB;AAC3D,WAAO,MAAM,IAAI,QAAQ,CAAC,SAAS,WAAW;AAC5C;AACA,sBAAgB,IAAI,cAAc,EAAE,SAAS,OAAO,CAAC;AACrD,wBAAkB;AAAA,QAChB,MAAM;AAAA,QACN,IAAI;AAAA,QACJ;AAAA,QACA;AAAA,MACF,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AACF;AAEO,SAAS,qBAEdA,kBACAC,WACA,eACA;AACA,MAAI,CAAC,oBAAoB;AAGvB;AAAA,EACF;AACA,sBAAoB;AACpB,OAAK,iBAAiB,WAAW,CAAC,UAAmC;AACnE,KAAC,YAAY;AACX,YAAM,OAAO,MAAM;AACnB,cAAQ,KAAK,MAAM;AAAA,QACjB,KAAK;AACH;AACE,kBAAM,KAAKD,iBAAgB,KAAK,IAAK;AACrC,gBAAI,CAAC,IAAI;AACP,oBAAM,IAAI,MAAM,wBAAwB,KAAK,IAAI,EAAE;AAAA,YACrD;AACA,gBAAI;AACF,oBAAM,SAAS,MAAM,QAAQ,QAAQ,GAAG,GAAI,KAAK,QAAQ,CAAC,CAAE,CAAC;AAC7D,gCAAkB;AAAA,gBAChB,MAAM;AAAA,gBACN,IAAI,KAAK;AAAA,gBACT;AAAA,cACF,CAAsB;AAAA,YACxB,SAAS,GAAQ;AACf,sBAAQ;AAAA,gBACN;AAAA,gBACA,KAAK;AAAA,gBACL;AAAA,gBACA,EAAE;AAAA,cACJ;AACA,gCAAkB;AAAA,gBAChB,MAAM;AAAA,gBACN,IAAI,KAAK;AAAA,gBACT,OAAO,EAAE;AAAA,cACX,CAAC;AAAA,YACH;AAAA,UACF;AACA;AAAA,QACF,KAAK;AACH;AACE,kBAAM,YAAY,KAAK;AACvB,kBAAM,SAAS,gBAAgB,IAAI,SAAS;AAC5C,gBAAI,CAAC,QAAQ;AACX,oBAAM,MAAM,oBAAoB;AAAA,YAClC;AACA,4BAAgB,OAAO,SAAS;AAChC,gBAAI,KAAK,OAAO;AACd,qBAAO,OAAO,IAAI,MAAM,KAAK,KAAK,CAAC;AAAA,YACrC,OAAO;AACL,qBAAO,QAAQ,KAAK,MAAM;AAAA,YAC5B;AAAA,UACF;AAEA;AAAA,MACJ;AAAA,IACF,GAAG,EAAE,MAAM,QAAQ,KAAK;AAAA,EAC1B,CAAC;AAED,oBAAkB;AAAA,IAChB,MAAM;AAAA,IACN,UAAAC;AAAA,EACF,CAAC;AACH;AAEO,SAAS,aAAa,GAAuB;AAClD,QAAM,YAAY,KAAK,CAAC;AACxB,QAAM,MAAM,UAAU;AACtB,QAAM,QAAQ,IAAI,WAAW,GAAG;AAChC,WAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC5B,UAAM,CAAC,IAAI,UAAU,WAAW,CAAC;AAAA,EACnC;AACA,SAAO;AACT;AAEO,SAAS,aAAa,QAAqC;AAChE,MAAI,OAAO,WAAW,UAAU;AAC9B,aAAS,IAAI,YAAY,EAAE,OAAO,MAAM;AAAA,EAC1C;AACA,MAAI,SAAS;AACb,QAAM,MAAM,OAAO;AACnB,WAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC5B,cAAU,OAAO,aAAa,OAAO,CAAC,CAAC;AAAA,EACzC;AACA,SAAO,KAAK,MAAM;AACpB;AAEA,eAAsB,aACpB,SACA,SAC6B;AAC7B,MAAI,OAAO,YAAY,UAAU;AAC/B,UAAM,OAAO,IAAI,WAAW,MAAM,QAAQ,YAAY,CAAC;AACvD,UAAM,cAAc,KAAK,SAAS,IAAI,aAAa,IAAI,IAAI;AAC3D,cAAU;AAAA,MACR,QAAQ,QAAQ;AAAA,MAChB,SAAS,OAAO,YAAY,QAAQ,QAAQ,QAAQ,CAAC;AAAA,MACrD,YAAY;AAAA,IACd;AACA,cAAU,QAAQ;AAAA,EACpB;AACA,SAAO,QAAQ,sBAAsB,SAAS,OAAO;AACvD;AAGA,WAAW,cAAc,WAAW;AAE7B,SAAS,mBAAmB;AAEjC,aAAW,QAAQ,eACjB,SACA,MACmB;AACnB,UAAM,cAAc,QAAQ,KAAK,OAC7B;AAAA,MACA,IAAI,WAAW,MAAO,IAAI,SAAS,KAAK,IAAI,EAAG,YAAY,CAAC;AAAA,IAC9D,IACE;AACJ,UAAM,IAAI,MAAM;AAAA,MACd;AAAA,MACA,QAAQ;AAAA,QACN,QAAQ,KAAK;AAAA,QACb,SAAS,KAAK;AAAA,QACd,YAAY;AAAA,MACd;AAAA,IACF;AACA,WAAO,IAAI,SAAS,EAAE,aAAa,aAAa,EAAE,UAAU,IAAI,MAAM;AAAA,MACpE,QAAQ,EAAE;AAAA,MACV,SAAS,EAAE;AAAA,IACb,CAAC;AAAA,EACH;AACF;AAEA,IAAI,oBAAoB;AACtB,mBAAiB;AACnB;;;AC7MA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACKA,IAAI,OAAO,SAAS,aAAa;AAC/B,EAAC,OAAe;AAAA,IACd,SAAS,MAAM;AACb,YAAM,IAAI,MAAM,sBAAsB;AAAA,IACxC;AAAA,EACF;AACF;AAGO,SAASC,SAAQ,SAAiB,MAA2B;AAClE,SAAQ,WAAmB,QAAQ,MAAM,GAAG,IAAI;AAClD;;;ADDO,SAAS,iBAAkC;AAChD,SAAOC,SAAQ,uBAAuB;AACxC;AAKO,SAAS,UAA2B;AACzC,SAAOA,SAAQ,gBAAgB;AACjC;AAMO,SAAS,QACd,SACA,iBAAiB,OACF;AACf,SAAOA,SAAQ,kBAAkB,SAAS,cAAc;AAC1D;AAKO,SAAS,YAA6B;AAC3C,SAAOA,SAAQ,kBAAkB;AACnC;AAKO,SAAS,eAAsD;AACpE,SAAOA,SAAQ,qBAAqB;AACtC;AAOO,SAAS,aAAa,MAAc,IAA2B;AACpE,SAAOA,SAAQ,uBAAuB,MAAM,EAAE;AAChD;AAKO,SAAS,OAAsB;AACpC,SAAOA,SAAQ,aAAa;AAC9B;AAQO,SAAS,SACd,SACA,eAAe,OACfC,aAAY,OACG;AACf,SAAOD,SAAQ,mBAAmB,SAAS,cAAcC,UAAS;AACpE;AAMO,SAAS,kBACd,OAAgC,QACjB;AACf,SAAOD,SAAQ,4BAA4B,IAAI;AACjD;AAKO,SAAS,qBAAoC;AAClD,SAAOA,SAAQ,2BAA2B;AAC5C;AAKO,SAAS,aAA4B;AAC1C,SAAOA,SAAQ,mBAAmB;AACpC;AAKO,SAAS,WAA0B;AACxC,SAAOA,SAAQ,iBAAiB;AAClC;AAKO,SAAS,0BAAyC;AACvD,SAAOA,SAAQ,gCAAgC;AACjD;AAOO,SAAS,QAAQ,KAAa,iBAAiB,OAAsB;AAC1E,SAAOA,SAAQ,kBAAkB,KAAK,cAAc;AACtD;AAEO,SAAS,YAA2B;AACzC,SAAOA,SAAQ,kBAAkB;AACnC;AAOO,SAAS,UAAU,OAA8B;AACtD,SAAOA,SAAQ,oBAAoB,KAAK;AAC1C;AAOO,SAAS,aAAa,UAAkB,SAAgC;AAC7E,SAAOA,SAAQ,uBAAuB,UAAU,OAAO;AACzD;AAOO,SAAS,WACd,QACA,SACqB;AACrB,SAAOA,SAAQ,qBAAqB,QAAQ,OAAO;AACrD;AAOO,SAAS,kBACd,SACA,OAAyB,QACV;AACf,SAAOA,SAAQ,4BAA4B,SAAS,IAAI;AAC1D;AASO,SAAS,UACd,OACA,SACA,WAAW,IACX,cAAc,IACqB;AACnC,SAAOA,SAAQ,oBAAoB,OAAO,SAAS,UAAU,WAAW;AAC1E;AASO,SAAS,UACd,IACA,MACA,MACA,SAAS,IACM;AACf,SAAOA,SAAQ,oBAAoB,IAAI,MAAM,MAAM,MAAM;AAC3D;AAMO,SAAS,UACd,IACe;AACf,SAAOA,SAAQ,oBAAoB,EAAE;AACvC;AAOO,SAAS,YAAY,MAAc,KAA4B;AACpE,SAAOA,SAAQ,sBAAsB,MAAM,GAAG;AAChD;AAQO,SAAS,aACd,MACA,IACA,MACe;AACf,SAAOA,SAAQ,uBAAuB,MAAM,IAAI,IAAI;AACtD;AAOO,SAAS,WAAW,KAAa,SAAS,OAAsB;AACrE,SAAOA,SAAQ,qBAAqB,KAAK,MAAM;AACjD;AAQO,SAAS,iBACd,MACA,SAAS,GACT,SAAS,OACM;AACf,SAAOA,SAAQ,2BAA2B,MAAM,QAAQ,MAAM;AAChE;AAMO,SAAS,eAAe,MAA6B;AAC1D,SAAOA,SAAQ,yBAAyB,IAAI;AAC9C;AAKO,SAAS,SAAS,QAA4B;AACnD,SAAOA,SAAQ,mBAAmB,MAAM;AAC1C;AAQO,SAAS,OACd,SACA,eAAe,IACc;AAC7B,SAAOA,SAAQ,iBAAiB,SAAS,YAAY;AACvD;AAOO,SAAS,QACd,SACkB;AAClB,SAAOA,SAAQ,kBAAkB,OAAO;AAC1C;AAOO,SAAS,YAAY,KAA2B;AACrD,SAAOA,SAAQ,sBAAsB,GAAG;AAC1C;AAOO,SAAS,YAAY,KAAa,OAA2B;AAClE,SAAOA,SAAQ,sBAAsB,KAAK,KAAK;AACjD;AAKO,SAAS,OAAsB;AACpC,SAAOA,SAAQ,aAAa;AAC9B;AAKO,SAAS,SAAwB;AACtC,SAAOA,SAAQ,eAAe;AAChC;AAKO,SAAS,aAA4B;AAC1C,SAAOA,SAAQ,mBAAmB;AACpC;AAKO,SAAS,UAAyB;AACvC,SAAOA,SAAQ,gBAAgB;AACjC;AAKO,SAAS,YAA2B;AACzC,SAAOA,SAAQ,kBAAkB;AACnC;AAKO,SAAS,OAAsB;AACpC,SAAOA,SAAQ,aAAa;AAC9B;AAKO,SAAS,OAAsB;AACpC,SAAOA,SAAQ,aAAa;AAC9B;AAKO,SAAS,kBAAiC;AAC/C,SAAOA,SAAQ,wBAAwB;AACzC;AAMO,SAAS,gBAAgB,MAAoC;AAClE,SAAOA,SAAQ,0BAA0B,IAAI;AAC/C;AAKO,SAAS,aAA4B;AAC1C,SAAOA,SAAQ,mBAAmB;AACpC;AAQO,SAAS,MAAM,WAAiC;AACrD,SAAOA,SAAQ,gBAAgB,SAAS;AAC1C;;;AE9YA;AAAA;AAAA;AAAA;AAAA;AAQO,SAAS,cAAc,MAAkC;AAC9D,SAAOE,SAAQ,0BAA0B,IAAI;AAC/C;AAOO,SAAS,gBAAgB,MAAkC;AAChE,SAAOA,SAAQ,4BAA4B,IAAI;AACjD;;;ACnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBO,SAAS,eACd,SACG,MACW;AACd,SAAOC,SAAQ,yBAAyB,MAAM,GAAG,IAAI;AACvD;AAQO,SAAS,cAAc,MAAc,MAA+B;AACzE,SAAOA,SAAQ,wBAAwB,MAAM,IAAI;AACnD;AAMO,SAAS,eAAoD;AAClE,SAAOA,SAAQ,qBAAqB;AACtC;AAMO,SAAS,eAAuC;AACrD,SAAOA,SAAQ,qBAAqB;AACtC;AAQO,SAAS,oBACd,SACG,MACW;AACd,SAAOA,SAAQ,8BAA8B,MAAM,GAAG,IAAI;AAC5D;AAKO,SAAS,yBACd,MACA,MACA,MACgC;AAChC,SAAOA,SAAQ,mCAAmC,MAAM,MAAM,IAAI;AACpE;AAQA,eAAsB,eACpB,KACA,cACc;AACd,SAAQ,MAAMA,SAAQ,yBAAyB,GAAG,KAAM;AAC1D;AAMO,SAAS,cAA6B;AAC3C,SAAOA,SAAQ,oBAAoB;AACrC;AAMO,SAAS,eAAgC;AAC9C,SAAOA,SAAQ,qBAAqB;AACtC;AAKO,SAAS,SAAsC;AACpD,SAAOA,SAAQ,eAAe;AAChC;AAKO,SAAS,UAAgC;AAC9C,SAAOA,SAAQ,gBAAgB;AACjC;AAKO,SAAS,aAA8B;AAC5C,SAAOA,SAAQ,mBAAmB;AACpC;;;AC1HA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaO,SAAS,IAAI,KAAa,OAA2B;AAC1D,SAAOC,SAAQ,mBAAmB,KAAK,KAAK;AAC9C;AAOO,SAAS,IAAI,KAA2B;AAC7C,SAAOA,SAAQ,mBAAmB,GAAG;AACvC;AAMO,SAAS,IAAI,KAA4B;AAC9C,SAAOA,SAAQ,sBAAsB,GAAG;AAC1C;;;AChCA;AAAA;AAAA;AAAA;;;ACaO,SAASC,cAAa,GAAuB;AAClD,QAAM,YAAY,KAAK,CAAC;AACxB,QAAM,MAAM,UAAU;AACtB,QAAM,QAAQ,IAAI,WAAW,GAAG;AAChC,WAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC5B,UAAM,CAAC,IAAI,UAAU,WAAW,CAAC;AAAA,EACnC;AACA,SAAO;AACT;AAqBO,SAAS,oBAAoB,SAA6B;AAC/D,QAAM,aAAa,QAAQ,MAAM,KAAK,CAAC,EAAE,CAAC;AAC1C,SAAOC,cAAa,UAAU;AAChC;;;ADnCA,eAAsB,UACpB,UACA,MACA,WAA+B,QACd;AACjB,QAAM,UAAU,MAAMC,SAAQ,mBAAmB,UAAU,IAAI;AAC/D,UAAQ,UAAU;AAAA,IAChB,KAAK;AACH,aAAO,IAAI,YAAY,EAAE,OAAO,oBAAoB,OAAO,CAAC;AAAA,IAC9D,KAAK;AACH,aAAO;AAAA,EACX;AACF;;;AEmCO,SAAS,qBACd,MACA,SACa;AACb,MAAI,QAAQ,IAAI,GAAG;AACjB,WAAO,CAAC,IAAI;AAAA,EACd;AACA,MAAI,UAAuB,CAAC;AAC5B,MAAI,KAAK,UAAU;AACjB,eAAW,SAAS,KAAK,UAAU;AACjC,gBAAU,CAAC,GAAG,SAAS,GAAG,qBAAqB,OAAO,OAAO,CAAC;AAAA,IAChE;AAAA,EACF;AACA,SAAO;AACT;AA2EO,SAAS,eACd,MACA,UACkB;AAClB,SAAO,qBAAqB,MAAM,CAAC,MAAM,EAAE,SAAS,QAAQ,EAAE,CAAC;AACjE;AAEO,SAAS,aACd,MAEA,SACM;AAEN,uBAAqB,MAAM,OAAO;AACpC;AAiCO,SAAS,aAAa,MAA0B;AACrD,MAAI,CAAC,MAAM;AACT,WAAO;AAAA,EACT;AACA,QAAM,SAAmB,CAAC;AAC1B,MAAI,KAAK,SAAS,QAAW;AAC3B,WAAO,KAAK;AAAA,EACd;AACA,aAAW,SAAS,KAAK,UAAW;AAClC,WAAO,KAAK,aAAa,KAAK,CAAC;AAAA,EACjC;AACA,SAAO,OAAO,KAAK,EAAE;AACvB;;;ACpMO,SAAS,cACd,MACQ;AACR,MAAI,KAAK,MAAM,SAAS,MAAM,KAAK,KAAK,MAAM,SAAS,WAAW,GAAG;AACnE,WAAO;AAAA,EACT;AAEA,QAAM,aAAa,CAAC,QAAqB,IAAI,IAAI,aAAa,EAAE,KAAK,EAAE;AAEvE,UAAQ,KAAK,MAAM;AAAA,IACjB,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK,WAAW;AACd,aAAO,WAAW,KAAK,QAAS;AAAA,IAClC;AAAA,IAEA,KAAK;AAAA,IACL,KAAK,aAAa;AAChB,WAAK,WAAW,KAAK,SAAU,OAAO,CAAC,MAAM,EAAE,IAAI;AACnD,aAAO,WAAW,KAAK,QAAS;AAAA,IAClC;AAAA,IAEA,KAAK,QAAQ;AACX,YAAM,mBAAmB,KAAK,SAAU,MAAM,GAAG,EAAE;AACnD,aAAO,WAAW,gBAAgB;AAAA,IACpC;AAAA,IAEA,KAAK,SAAS;AACZ,YAAM,cAAc,eAAe,MAAM,eAAe,KACtD,KAAK,SAAU,CAAC;AAClB,UAAI,UAAU,eAAe,YAAY,SAAS,aAC9C,aAAa,WAAW,IACxB;AAEJ,YAAM,SAAS,8BAA8B,KAAK,OAAO;AACzD,UAAI,QAAQ;AACV,kBAAU,QAAQ,QAAQ,OAAO,CAAC,GAAG,EAAE,EAAE,QAAQ,KAAK,EAAE;AAAA,MAC1D;AAEA,aAAO;AAAA,IACT;AAAA,IAEA,KAAK,YAAY;AACf,YAAM,YAAY,eAAe,MAAM,eAAe;AAEtD,UAAI;AACJ,UAAI,WAAW;AACb,mBAAW,UAAU,SAAU,CAAC,EAAE;AAAA,MACpC,OAAO;AACL,cAAM,MAAM,eAAe,MAAM,cAAc,EAAG,SAAU,CAAC,EAAE;AAC/D,mBAAW,IAAI,MAAM,GAAG,EAAE,IAAI;AAAA,MAChC;AAEA,aAAO;AAAA,IACT;AAAA,IAEA,KAAK,YAAY;AACf,YAAM,MAAM,KAAK,SAAU,CAAC,EAAE;AAC9B,aAAO;AAAA,IACT;AAAA,IAEA,KAAK,eAAe;AAClB,YAAM,YAAY,eAAe,MAAM,kBAAkB;AAEzD,UAAI;AACJ,UAAI,WAAW;AACb,kBAAU,UAAU,SAAU,CAAC,EAAE;AAAA,MACnC,OAAO;AACL,kBAAU,KAAK,SAAU,CAAC,EAAE,SAAU,CAAC,EAAE;AAAA,MAC3C;AAEA,aAAO;AAAA,IACT;AAAA,IAEA,KAAK,aAAa;AAChB,aAAO,KAAK,SAAU,CAAC,EAAE;AAAA,IAC3B;AAAA,IAEA,KAAK,UAAU;AACb,aAAO,KAAK,SAAU,CAAC,EAAE,KAAM,MAAM,CAAC;AAAA,IACxC;AAAA,IAEA,KAAK;AAAA,IACL,KAAK,UAAU;AACb,aAAO,KAAK,SAAU,CAAC,EAAE;AAAA,IAC3B;AAAA,IAEA,KAAK;AAAA,IACL,KAAK,gBAAgB;AACnB,aAAO,aAAa,IAAI;AAAA,IAC1B;AAAA,IAEA,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK;AAAA,IACL,KAAK,aAAa;AAChB,aAAO;AAAA,IACT;AAAA,IAEA,KAAK;AACH,aAAO,KAAK;AAAA,IAEd;AACE,cAAQ,IAAI,uBAAuB,KAAK,IAAI;AAC5C,aAAO;AAAA,EACX;AACF;;;ACzHA,IAAM,YAAY;AAElB,IAAM,gBAAgB;AAEtB,eAAe,eAAe;AAC1B,SAAO,CAAC,CAAE,MAAM,oBAAY,IAAI,aAAa;AACjD;AAEA,eAAe,cAAc,OAAgB;AACzC,SAAO,MAAM,oBAAY,IAAI,eAAe,KAAK;AACrD;AAEA,eAAsB,qBAAqB;AACvC,QAAM,eAAO,UAAU,KAAK;AAC5B,QAAM,cAAc,KAAK;AAC7B;AAEA,eAAsB,uBAAuB;AACzC,QAAM,eAAe,MAAM,aAAa;AACxC,MAAI,CAAC,cAAc;AACf,UAAM,mBAAmB;AAAA,EAC7B,OAAO;AACH,UAAM,mBAAmB;AAAA,EAC7B;AACJ;AAEA,eAAsB,mBAAmB;AACrC,MAAI;AACA,UAAM,MAAM,MAAM,eAAO,OAAO;AAChC,QAAI,QAAQ,UAAU;AAClB;AAAA,IACJ;AAEA,QAAI,MAAM,aAAa,GAAG;AACtB,aAAO,MAAM,mBAAmB;AAAA,IACpC;AAAA,EACJ,SAAS,GAAG;AACR,YAAQ,MAAM,GAAG,SAAS,6BAA6B,CAAC;AAAA,EAC5D;AACJ;AAEA,eAAsB,qBAA0C;AAC5D,MAAI,SAA0B,CAAC;AAE/B,QAAM,CAAC,MAAM,IAAI,MAAM,QAAQ,IAAI;AAAA,IAC/B,cAAM,UAAU,WAAW,2BAA2B;AAAA,EAC1D,CAAC;AAED,QAAM,OAAO,MAAM,eAAO,eAAe;AACzC,QAAM,OAAO,MAAM,eAAO,QAAQ;AAClC,QAAM,OAAO,MAAM,iBAAS,cAAc,IAAI;AAC9C,QAAM,UAAoB,CAAC;AAE3B,eAAa,MAAM,CAAC,MAAM;AACtB,QAAI,EAAE,MAAM,WAAW,YAAY,GAAG;AAClC,cAAQ,KAAK;AAAA,QACT,MAAM,EAAE,SAAU,MAAM,CAAC,EAAE,IAAI,aAAa,EAAE,KAAK,EAAE,EAAE,KAAK;AAAA,QAC5D,KAAK,EAAE;AAAA,QACP,OAAO,CAAC,EAAE,KAAK,EAAE,KAAK,SAAS,CAAC;AAAA,MACpC,CAAC;AAED,aAAO;AAAA,IACX;AAEA,WAAO;AAAA,EACX,CAAC;AAED,MAAI,QAAQ,WAAW,GAAG;AACtB,WAAO;AAAA,EACX;AAEA,MAAI,YAAY;AAChB,MAAI,YAAY;AAEhB,UAAQ,IAAI,CAAC,QAAQ,OAAO,QAAQ;AAChC,QAAI,QAAQ,OAAO;AAEnB,QAAI,UAAU,GAAG;AACb,mBAAa;AAAA,IACjB,WAAW,QAAQ,WAAW;AAC1B,eAAS,IAAI,GAAG,IAAI,QAAQ,WAAW,EAAE,GAAG;AACxC,qBAAa;AAAA,MACjB;AAAA,IACJ,WAAW,QAAQ,WAAW;AAC1B,eAAS,IAAI,GAAG,IAAI,YAAY,OAAO,EAAE,GAAG;AACxC,qBAAa;AAAA,MACjB;AAAA,IACJ;AACA,iBAAa;AAAA,uEACkD,OAAO,GAAG,KAAK,OAAO,IAAI;AAEzF,QAAI,UAAU,IAAI,SAAS,GAAG;AAC1B,mBAAa;AAAA,IACjB;AAEA,gBAAY;AAAA,EAChB,CAAC;AAED,QAAM,eAAO;AAAA,IACT;AAAA,IACA;AAAA,IACA;AAAA;AAAA;AAAA,cAGM,SAAS;AAAA;AAAA;AAAA,IAGf;AAAA,UACE,MAAM;AAAA;AAAA,EAEZ;AAEA,QAAM,cAAc,IAAI;AAC5B;;;AC1HA,IAAM,kBAAkB;AAAA,EACtB;AAAA,EACA;AAAA,EACA;AAAA,EACA,QAAQ;AAEV;AAGA,IAAM,WAAW;AAAA,EACf,QAAQ;AAAA,EACR,aAAa;AAAA,IACX,sBAAsB;AAAA,MACpB,QAAQ;AAAA,IACV;AAAA,IACA,sBAAsB;AAAA,MACpB,QAAQ;AAAA,IACV;AAAA,IACA,oBAAoB;AAAA,MAClB,QAAQ;AAAA,MACR,UAAU;AAAA,QACR;AAAA,QACA;AAAA,QACA;AAAA,MACF;AAAA,IACF;AAAA,IACA,UAAU;AAAA,MACR,QAAQ;AAAA,MACR,WAAW;AAAA,QACT,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,OAAO;AAAA,MACT;AAAA,IACF;AAAA,EACF;AAAA,EACA,UAAU,CAAC;AACb;AAEO,IAAM,OAAO,EAAC,UAAU,gBAAe;AAE9C,qBAAqB,iBAAiB,UAAU,KAAK,WAAW;",
  "names": ["functionMapping", "manifest", "syscall", "syscall", "newWindow", "syscall", "syscall", "syscall", "base64Decode", "base64Decode", "syscall"]
}
